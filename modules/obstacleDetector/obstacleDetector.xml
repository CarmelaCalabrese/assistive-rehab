<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="yarpmanifest.xsl"?>

<module>
  <name>obstacleDetector</name>
  <doxygen-group>obstacleDetector</doxygen-group>
  <description>This module detects obstacles using data coming from the robot's laser.</description>
  <copypolicy>Released under the terms of the BSD 3-Clause License.</copypolicy>
  <version>0.5.0</version>

  <description-long>
   This moudule aims at detecting obstacles along the robot's path using data coming from the laser. If an obstacle is found, the robot stops navigating.
  </description-long>

  <arguments>
    <param default="0.1" desc="Periodicity of the module (s).">period</param>
    <param default="obstacleDetector" desc="Name of the module.">name</param>
    <param default="cer" desc="Name of the robot to read laser data from.">robot</param>
    <param default="0.3" desc="Minimum distance between laser points to cluster them (m).">dist-thresh</param>
    <param default="1.0" desc="Distance from the obstacle to stop the navigation (m).">dist-obstacle</param>
    <param default="3" desc="Minimum number of points the cluster can include to be considered valid.">min-points</param>
    <param default="1.0" desc="Vertical resolution shown on the image (Every ver-step a circle is shown).">ver-step</param>
  </arguments>

  <authors>
    <author email="valentina.vasco@iit.it">Valentina Vasco</author>
  </authors>

  <data>
    <output>
      <type>Bottle</type>
      <port>/obstacleDetector/obstacle:o</port>
      <description>
        Provides info about the obstacle found, including its distance from the robot and from which laser was detected.
      </description>
    </output>
    <output>
      <type>ImageOfPixelRgb</type>
      <port>/obstacleDetector/viewer:o</port>
      <description>
        Outputs an image with clustered points in different colors.
      </description>
    </output>
    <output>
      <type>Rpc</type>
      <port>/obstacleDetector/nav:rpc</port>
      <description>
        Sends commands to navController.
      </description>
    </output>
  </data>

</module>
